#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace capaDatos.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Turismo_Seguro")]
	public partial class DbLibraryEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTD_CompraXExtra(TD_CompraXExtra instance);
    partial void UpdateTD_CompraXExtra(TD_CompraXExtra instance);
    partial void DeleteTD_CompraXExtra(TD_CompraXExtra instance);
    partial void InsertTM_Usuario(TM_Usuario instance);
    partial void UpdateTM_Usuario(TM_Usuario instance);
    partial void DeleteTM_Usuario(TM_Usuario instance);
    partial void InsertTD_ComunicacionReclamacion(TD_ComunicacionReclamacion instance);
    partial void UpdateTD_ComunicacionReclamacion(TD_ComunicacionReclamacion instance);
    partial void DeleteTD_ComunicacionReclamacion(TD_ComunicacionReclamacion instance);
    partial void InsertTD_EstadoReclamacion(TD_EstadoReclamacion instance);
    partial void UpdateTD_EstadoReclamacion(TD_EstadoReclamacion instance);
    partial void DeleteTD_EstadoReclamacion(TD_EstadoReclamacion instance);
    partial void InsertTD_Viajero(TD_Viajero instance);
    partial void UpdateTD_Viajero(TD_Viajero instance);
    partial void DeleteTD_Viajero(TD_Viajero instance);
    partial void InsertTM_Asistencia(TM_Asistencia instance);
    partial void UpdateTM_Asistencia(TM_Asistencia instance);
    partial void DeleteTM_Asistencia(TM_Asistencia instance);
    partial void InsertTM_CategoriaAsistencia(TM_CategoriaAsistencia instance);
    partial void UpdateTM_CategoriaAsistencia(TM_CategoriaAsistencia instance);
    partial void DeleteTM_CategoriaAsistencia(TM_CategoriaAsistencia instance);
    partial void InsertTM_Cliente(TM_Cliente instance);
    partial void UpdateTM_Cliente(TM_Cliente instance);
    partial void DeleteTM_Cliente(TM_Cliente instance);
    partial void InsertTM_Cobertura(TM_Cobertura instance);
    partial void UpdateTM_Cobertura(TM_Cobertura instance);
    partial void DeleteTM_Cobertura(TM_Cobertura instance);
    partial void InsertTM_CompraSeguro(TM_CompraSeguro instance);
    partial void UpdateTM_CompraSeguro(TM_CompraSeguro instance);
    partial void DeleteTM_CompraSeguro(TM_CompraSeguro instance);
    partial void InsertTM_Cotizacion(TM_Cotizacion instance);
    partial void UpdateTM_Cotizacion(TM_Cotizacion instance);
    partial void DeleteTM_Cotizacion(TM_Cotizacion instance);
    partial void InsertTM_DependienteCliente(TM_DependienteCliente instance);
    partial void UpdateTM_DependienteCliente(TM_DependienteCliente instance);
    partial void DeleteTM_DependienteCliente(TM_DependienteCliente instance);
    partial void InsertTM_DocumentosReclamacion(TM_DocumentosReclamacion instance);
    partial void UpdateTM_DocumentosReclamacion(TM_DocumentosReclamacion instance);
    partial void DeleteTM_DocumentosReclamacion(TM_DocumentosReclamacion instance);
    partial void InsertTM_ExtraOpcional(TM_ExtraOpcional instance);
    partial void UpdateTM_ExtraOpcional(TM_ExtraOpcional instance);
    partial void DeleteTM_ExtraOpcional(TM_ExtraOpcional instance);
    partial void InsertTM_GestionPoliza(TM_GestionPoliza instance);
    partial void UpdateTM_GestionPoliza(TM_GestionPoliza instance);
    partial void DeleteTM_GestionPoliza(TM_GestionPoliza instance);
    partial void InsertTM_Pai(TM_Pai instance);
    partial void UpdateTM_Pai(TM_Pai instance);
    partial void DeleteTM_Pai(TM_Pai instance);
    partial void InsertTM_Reclamacion(TM_Reclamacion instance);
    partial void UpdateTM_Reclamacion(TM_Reclamacion instance);
    partial void DeleteTM_Reclamacion(TM_Reclamacion instance);
    partial void InsertTM_Recomendacione(TM_Recomendacione instance);
    partial void UpdateTM_Recomendacione(TM_Recomendacione instance);
    partial void DeleteTM_Recomendacione(TM_Recomendacione instance);
    #endregion
		
		public DbLibraryEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TD_CompraXExtra> TD_CompraXExtras
		{
			get
			{
				return this.GetTable<TD_CompraXExtra>();
			}
		}
		
		public System.Data.Linq.Table<TM_Usuario> TM_Usuarios
		{
			get
			{
				return this.GetTable<TM_Usuario>();
			}
		}
		
		public System.Data.Linq.Table<TD_ComunicacionReclamacion> TD_ComunicacionReclamacions
		{
			get
			{
				return this.GetTable<TD_ComunicacionReclamacion>();
			}
		}
		
		public System.Data.Linq.Table<TD_EstadoReclamacion> TD_EstadoReclamacions
		{
			get
			{
				return this.GetTable<TD_EstadoReclamacion>();
			}
		}
		
		public System.Data.Linq.Table<TD_Viajero> TD_Viajeros
		{
			get
			{
				return this.GetTable<TD_Viajero>();
			}
		}
		
		public System.Data.Linq.Table<TM_Asistencia> TM_Asistencias
		{
			get
			{
				return this.GetTable<TM_Asistencia>();
			}
		}
		
		public System.Data.Linq.Table<TM_CategoriaAsistencia> TM_CategoriaAsistencias
		{
			get
			{
				return this.GetTable<TM_CategoriaAsistencia>();
			}
		}
		
		public System.Data.Linq.Table<TM_Cliente> TM_Clientes
		{
			get
			{
				return this.GetTable<TM_Cliente>();
			}
		}
		
		public System.Data.Linq.Table<TM_Cobertura> TM_Coberturas
		{
			get
			{
				return this.GetTable<TM_Cobertura>();
			}
		}
		
		public System.Data.Linq.Table<TM_CompraSeguro> TM_CompraSeguros
		{
			get
			{
				return this.GetTable<TM_CompraSeguro>();
			}
		}
		
		public System.Data.Linq.Table<TM_Cotizacion> TM_Cotizacions
		{
			get
			{
				return this.GetTable<TM_Cotizacion>();
			}
		}
		
		public System.Data.Linq.Table<TM_DependienteCliente> TM_DependienteClientes
		{
			get
			{
				return this.GetTable<TM_DependienteCliente>();
			}
		}
		
		public System.Data.Linq.Table<TM_DocumentosReclamacion> TM_DocumentosReclamacions
		{
			get
			{
				return this.GetTable<TM_DocumentosReclamacion>();
			}
		}
		
		public System.Data.Linq.Table<TM_ExtraOpcional> TM_ExtraOpcionals
		{
			get
			{
				return this.GetTable<TM_ExtraOpcional>();
			}
		}
		
		public System.Data.Linq.Table<TM_GestionPoliza> TM_GestionPolizas
		{
			get
			{
				return this.GetTable<TM_GestionPoliza>();
			}
		}
		
		public System.Data.Linq.Table<TM_Pai> TM_Pais
		{
			get
			{
				return this.GetTable<TM_Pai>();
			}
		}
		
		public System.Data.Linq.Table<TM_Reclamacion> TM_Reclamacions
		{
			get
			{
				return this.GetTable<TM_Reclamacion>();
			}
		}
		
		public System.Data.Linq.Table<TM_Recomendacione> TM_Recomendaciones
		{
			get
			{
				return this.GetTable<TM_Recomendacione>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TD_CompraXExtra")]
	public partial class TD_CompraXExtra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompraXExtra_ID;
		
		private System.Nullable<int> _Compra_ID;
		
		private System.Nullable<int> _ExtraOpcional_ID;
		
		private EntityRef<TM_CompraSeguro> _TM_CompraSeguro;
		
		private EntityRef<TM_ExtraOpcional> _TM_ExtraOpcional;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompraXExtra_IDChanging(int value);
    partial void OnCompraXExtra_IDChanged();
    partial void OnCompra_IDChanging(System.Nullable<int> value);
    partial void OnCompra_IDChanged();
    partial void OnExtraOpcional_IDChanging(System.Nullable<int> value);
    partial void OnExtraOpcional_IDChanged();
    #endregion
		
		public TD_CompraXExtra()
		{
			this._TM_CompraSeguro = default(EntityRef<TM_CompraSeguro>);
			this._TM_ExtraOpcional = default(EntityRef<TM_ExtraOpcional>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompraXExtra_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompraXExtra_ID
		{
			get
			{
				return this._CompraXExtra_ID;
			}
			set
			{
				if ((this._CompraXExtra_ID != value))
				{
					this.OnCompraXExtra_IDChanging(value);
					this.SendPropertyChanging();
					this._CompraXExtra_ID = value;
					this.SendPropertyChanged("CompraXExtra_ID");
					this.OnCompraXExtra_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compra_ID", DbType="Int")]
		public System.Nullable<int> Compra_ID
		{
			get
			{
				return this._Compra_ID;
			}
			set
			{
				if ((this._Compra_ID != value))
				{
					if (this._TM_CompraSeguro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompra_IDChanging(value);
					this.SendPropertyChanging();
					this._Compra_ID = value;
					this.SendPropertyChanged("Compra_ID");
					this.OnCompra_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraOpcional_ID", DbType="Int")]
		public System.Nullable<int> ExtraOpcional_ID
		{
			get
			{
				return this._ExtraOpcional_ID;
			}
			set
			{
				if ((this._ExtraOpcional_ID != value))
				{
					if (this._TM_ExtraOpcional.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtraOpcional_IDChanging(value);
					this.SendPropertyChanging();
					this._ExtraOpcional_ID = value;
					this.SendPropertyChanged("ExtraOpcional_ID");
					this.OnExtraOpcional_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_CompraSeguro_TD_CompraXExtra", Storage="_TM_CompraSeguro", ThisKey="Compra_ID", OtherKey="Compra_ID", IsForeignKey=true)]
		public TM_CompraSeguro TM_CompraSeguro
		{
			get
			{
				return this._TM_CompraSeguro.Entity;
			}
			set
			{
				TM_CompraSeguro previousValue = this._TM_CompraSeguro.Entity;
				if (((previousValue != value) 
							|| (this._TM_CompraSeguro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_CompraSeguro.Entity = null;
						previousValue.TD_CompraXExtras.Remove(this);
					}
					this._TM_CompraSeguro.Entity = value;
					if ((value != null))
					{
						value.TD_CompraXExtras.Add(this);
						this._Compra_ID = value.Compra_ID;
					}
					else
					{
						this._Compra_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_CompraSeguro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_ExtraOpcional_TD_CompraXExtra", Storage="_TM_ExtraOpcional", ThisKey="ExtraOpcional_ID", OtherKey="ExtraOpcional_ID", IsForeignKey=true)]
		public TM_ExtraOpcional TM_ExtraOpcional
		{
			get
			{
				return this._TM_ExtraOpcional.Entity;
			}
			set
			{
				TM_ExtraOpcional previousValue = this._TM_ExtraOpcional.Entity;
				if (((previousValue != value) 
							|| (this._TM_ExtraOpcional.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_ExtraOpcional.Entity = null;
						previousValue.TD_CompraXExtras.Remove(this);
					}
					this._TM_ExtraOpcional.Entity = value;
					if ((value != null))
					{
						value.TD_CompraXExtras.Add(this);
						this._ExtraOpcional_ID = value.ExtraOpcional_ID;
					}
					else
					{
						this._ExtraOpcional_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_ExtraOpcional");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_Usuario")]
	public partial class TM_Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Usuario_ID;
		
		private System.Nullable<int> _Cliente_ID;
		
		private string _Usuario;
		
		private string _Clave_Acceso;
		
		private string _Salt;
		
		private EntitySet<TD_ComunicacionReclamacion> _TD_ComunicacionReclamacions;
		
		private EntityRef<TM_Cliente> _TM_Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuario_IDChanging(int value);
    partial void OnUsuario_IDChanged();
    partial void OnCliente_IDChanging(System.Nullable<int> value);
    partial void OnCliente_IDChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnClave_AccesoChanging(string value);
    partial void OnClave_AccesoChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    #endregion
		
		public TM_Usuario()
		{
			this._TD_ComunicacionReclamacions = new EntitySet<TD_ComunicacionReclamacion>(new Action<TD_ComunicacionReclamacion>(this.attach_TD_ComunicacionReclamacions), new Action<TD_ComunicacionReclamacion>(this.detach_TD_ComunicacionReclamacions));
			this._TM_Cliente = default(EntityRef<TM_Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Usuario_ID
		{
			get
			{
				return this._Usuario_ID;
			}
			set
			{
				if ((this._Usuario_ID != value))
				{
					this.OnUsuario_IDChanging(value);
					this.SendPropertyChanging();
					this._Usuario_ID = value;
					this.SendPropertyChanged("Usuario_ID");
					this.OnUsuario_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente_ID", DbType="Int")]
		public System.Nullable<int> Cliente_ID
		{
			get
			{
				return this._Cliente_ID;
			}
			set
			{
				if ((this._Cliente_ID != value))
				{
					if (this._TM_Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCliente_IDChanging(value);
					this.SendPropertyChanging();
					this._Cliente_ID = value;
					this.SendPropertyChanged("Cliente_ID");
					this.OnCliente_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(50)")]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clave_Acceso", DbType="VarChar(255)")]
		public string Clave_Acceso
		{
			get
			{
				return this._Clave_Acceso;
			}
			set
			{
				if ((this._Clave_Acceso != value))
				{
					this.OnClave_AccesoChanging(value);
					this.SendPropertyChanging();
					this._Clave_Acceso = value;
					this.SendPropertyChanged("Clave_Acceso");
					this.OnClave_AccesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="VarChar(255)")]
		public string Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Usuario_TD_ComunicacionReclamacion", Storage="_TD_ComunicacionReclamacions", ThisKey="Usuario_ID", OtherKey="Usuario_ID")]
		public EntitySet<TD_ComunicacionReclamacion> TD_ComunicacionReclamacions
		{
			get
			{
				return this._TD_ComunicacionReclamacions;
			}
			set
			{
				this._TD_ComunicacionReclamacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cliente_TM_Usuario", Storage="_TM_Cliente", ThisKey="Cliente_ID", OtherKey="Cliente_ID", IsForeignKey=true)]
		public TM_Cliente TM_Cliente
		{
			get
			{
				return this._TM_Cliente.Entity;
			}
			set
			{
				TM_Cliente previousValue = this._TM_Cliente.Entity;
				if (((previousValue != value) 
							|| (this._TM_Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Cliente.Entity = null;
						previousValue.TM_Usuarios.Remove(this);
					}
					this._TM_Cliente.Entity = value;
					if ((value != null))
					{
						value.TM_Usuarios.Add(this);
						this._Cliente_ID = value.Cliente_ID;
					}
					else
					{
						this._Cliente_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TD_ComunicacionReclamacions(TD_ComunicacionReclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_Usuario = this;
		}
		
		private void detach_TD_ComunicacionReclamacions(TD_ComunicacionReclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TD_ComunicacionReclamacion")]
	public partial class TD_ComunicacionReclamacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComunicacionReclamacion_ID;
		
		private System.Nullable<int> _Reclamacion_ID;
		
		private System.Nullable<int> _Usuario_ID;
		
		private string _Mensaje;
		
		private EntityRef<TM_Usuario> _TM_Usuario;
		
		private EntityRef<TM_Reclamacion> _TM_Reclamacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComunicacionReclamacion_IDChanging(int value);
    partial void OnComunicacionReclamacion_IDChanged();
    partial void OnReclamacion_IDChanging(System.Nullable<int> value);
    partial void OnReclamacion_IDChanged();
    partial void OnUsuario_IDChanging(System.Nullable<int> value);
    partial void OnUsuario_IDChanged();
    partial void OnMensajeChanging(string value);
    partial void OnMensajeChanged();
    #endregion
		
		public TD_ComunicacionReclamacion()
		{
			this._TM_Usuario = default(EntityRef<TM_Usuario>);
			this._TM_Reclamacion = default(EntityRef<TM_Reclamacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComunicacionReclamacion_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ComunicacionReclamacion_ID
		{
			get
			{
				return this._ComunicacionReclamacion_ID;
			}
			set
			{
				if ((this._ComunicacionReclamacion_ID != value))
				{
					this.OnComunicacionReclamacion_IDChanging(value);
					this.SendPropertyChanging();
					this._ComunicacionReclamacion_ID = value;
					this.SendPropertyChanged("ComunicacionReclamacion_ID");
					this.OnComunicacionReclamacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reclamacion_ID", DbType="Int")]
		public System.Nullable<int> Reclamacion_ID
		{
			get
			{
				return this._Reclamacion_ID;
			}
			set
			{
				if ((this._Reclamacion_ID != value))
				{
					if (this._TM_Reclamacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReclamacion_IDChanging(value);
					this.SendPropertyChanging();
					this._Reclamacion_ID = value;
					this.SendPropertyChanged("Reclamacion_ID");
					this.OnReclamacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario_ID", DbType="Int")]
		public System.Nullable<int> Usuario_ID
		{
			get
			{
				return this._Usuario_ID;
			}
			set
			{
				if ((this._Usuario_ID != value))
				{
					if (this._TM_Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuario_IDChanging(value);
					this.SendPropertyChanging();
					this._Usuario_ID = value;
					this.SendPropertyChanged("Usuario_ID");
					this.OnUsuario_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this.OnMensajeChanging(value);
					this.SendPropertyChanging();
					this._Mensaje = value;
					this.SendPropertyChanged("Mensaje");
					this.OnMensajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Usuario_TD_ComunicacionReclamacion", Storage="_TM_Usuario", ThisKey="Usuario_ID", OtherKey="Usuario_ID", IsForeignKey=true)]
		public TM_Usuario TM_Usuario
		{
			get
			{
				return this._TM_Usuario.Entity;
			}
			set
			{
				TM_Usuario previousValue = this._TM_Usuario.Entity;
				if (((previousValue != value) 
							|| (this._TM_Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Usuario.Entity = null;
						previousValue.TD_ComunicacionReclamacions.Remove(this);
					}
					this._TM_Usuario.Entity = value;
					if ((value != null))
					{
						value.TD_ComunicacionReclamacions.Add(this);
						this._Usuario_ID = value.Usuario_ID;
					}
					else
					{
						this._Usuario_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Reclamacion_TD_ComunicacionReclamacion", Storage="_TM_Reclamacion", ThisKey="Reclamacion_ID", OtherKey="Reclamacion_ID", IsForeignKey=true)]
		public TM_Reclamacion TM_Reclamacion
		{
			get
			{
				return this._TM_Reclamacion.Entity;
			}
			set
			{
				TM_Reclamacion previousValue = this._TM_Reclamacion.Entity;
				if (((previousValue != value) 
							|| (this._TM_Reclamacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Reclamacion.Entity = null;
						previousValue.TD_ComunicacionReclamacions.Remove(this);
					}
					this._TM_Reclamacion.Entity = value;
					if ((value != null))
					{
						value.TD_ComunicacionReclamacions.Add(this);
						this._Reclamacion_ID = value.Reclamacion_ID;
					}
					else
					{
						this._Reclamacion_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Reclamacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TD_EstadoReclamacion")]
	public partial class TD_EstadoReclamacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstadoReclamacion_ID;
		
		private string _Detalle;
		
		private EntitySet<TM_Reclamacion> _TM_Reclamacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstadoReclamacion_IDChanging(int value);
    partial void OnEstadoReclamacion_IDChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public TD_EstadoReclamacion()
		{
			this._TM_Reclamacions = new EntitySet<TM_Reclamacion>(new Action<TM_Reclamacion>(this.attach_TM_Reclamacions), new Action<TM_Reclamacion>(this.detach_TM_Reclamacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoReclamacion_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EstadoReclamacion_ID
		{
			get
			{
				return this._EstadoReclamacion_ID;
			}
			set
			{
				if ((this._EstadoReclamacion_ID != value))
				{
					this.OnEstadoReclamacion_IDChanging(value);
					this.SendPropertyChanging();
					this._EstadoReclamacion_ID = value;
					this.SendPropertyChanged("EstadoReclamacion_ID");
					this.OnEstadoReclamacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="VarChar(255)")]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TD_EstadoReclamacion_TM_Reclamacion", Storage="_TM_Reclamacions", ThisKey="EstadoReclamacion_ID", OtherKey="EstadoReclamacion_ID")]
		public EntitySet<TM_Reclamacion> TM_Reclamacions
		{
			get
			{
				return this._TM_Reclamacions;
			}
			set
			{
				this._TM_Reclamacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TM_Reclamacions(TM_Reclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TD_EstadoReclamacion = this;
		}
		
		private void detach_TM_Reclamacions(TM_Reclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TD_EstadoReclamacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TD_Viajero")]
	public partial class TD_Viajero : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetalleViajero_ID;
		
		private System.Nullable<int> _Cotizacion_ID;
		
		private System.Nullable<int> _Edad_Viajero;
		
		private EntitySet<TM_Cliente> _TM_Clientes;
		
		private EntitySet<TM_DependienteCliente> _TM_DependienteClientes;
		
		private EntityRef<TM_Cotizacion> _TM_Cotizacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetalleViajero_IDChanging(int value);
    partial void OnDetalleViajero_IDChanged();
    partial void OnCotizacion_IDChanging(System.Nullable<int> value);
    partial void OnCotizacion_IDChanged();
    partial void OnEdad_ViajeroChanging(System.Nullable<int> value);
    partial void OnEdad_ViajeroChanged();
    #endregion
		
		public TD_Viajero()
		{
			this._TM_Clientes = new EntitySet<TM_Cliente>(new Action<TM_Cliente>(this.attach_TM_Clientes), new Action<TM_Cliente>(this.detach_TM_Clientes));
			this._TM_DependienteClientes = new EntitySet<TM_DependienteCliente>(new Action<TM_DependienteCliente>(this.attach_TM_DependienteClientes), new Action<TM_DependienteCliente>(this.detach_TM_DependienteClientes));
			this._TM_Cotizacion = default(EntityRef<TM_Cotizacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetalleViajero_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetalleViajero_ID
		{
			get
			{
				return this._DetalleViajero_ID;
			}
			set
			{
				if ((this._DetalleViajero_ID != value))
				{
					this.OnDetalleViajero_IDChanging(value);
					this.SendPropertyChanging();
					this._DetalleViajero_ID = value;
					this.SendPropertyChanged("DetalleViajero_ID");
					this.OnDetalleViajero_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cotizacion_ID", DbType="Int")]
		public System.Nullable<int> Cotizacion_ID
		{
			get
			{
				return this._Cotizacion_ID;
			}
			set
			{
				if ((this._Cotizacion_ID != value))
				{
					if (this._TM_Cotizacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCotizacion_IDChanging(value);
					this.SendPropertyChanging();
					this._Cotizacion_ID = value;
					this.SendPropertyChanged("Cotizacion_ID");
					this.OnCotizacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad_Viajero", DbType="Int")]
		public System.Nullable<int> Edad_Viajero
		{
			get
			{
				return this._Edad_Viajero;
			}
			set
			{
				if ((this._Edad_Viajero != value))
				{
					this.OnEdad_ViajeroChanging(value);
					this.SendPropertyChanging();
					this._Edad_Viajero = value;
					this.SendPropertyChanged("Edad_Viajero");
					this.OnEdad_ViajeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TD_Viajero_TM_Cliente", Storage="_TM_Clientes", ThisKey="DetalleViajero_ID", OtherKey="DetalleViajero_ID")]
		public EntitySet<TM_Cliente> TM_Clientes
		{
			get
			{
				return this._TM_Clientes;
			}
			set
			{
				this._TM_Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TD_Viajero_TM_DependienteCliente", Storage="_TM_DependienteClientes", ThisKey="DetalleViajero_ID", OtherKey="DetalleViajero_ID")]
		public EntitySet<TM_DependienteCliente> TM_DependienteClientes
		{
			get
			{
				return this._TM_DependienteClientes;
			}
			set
			{
				this._TM_DependienteClientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cotizacion_TD_Viajero", Storage="_TM_Cotizacion", ThisKey="Cotizacion_ID", OtherKey="Cotizacion_ID", IsForeignKey=true)]
		public TM_Cotizacion TM_Cotizacion
		{
			get
			{
				return this._TM_Cotizacion.Entity;
			}
			set
			{
				TM_Cotizacion previousValue = this._TM_Cotizacion.Entity;
				if (((previousValue != value) 
							|| (this._TM_Cotizacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Cotizacion.Entity = null;
						previousValue.TD_Viajeros.Remove(this);
					}
					this._TM_Cotizacion.Entity = value;
					if ((value != null))
					{
						value.TD_Viajeros.Add(this);
						this._Cotizacion_ID = value.Cotizacion_ID;
					}
					else
					{
						this._Cotizacion_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Cotizacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TM_Clientes(TM_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.TD_Viajero = this;
		}
		
		private void detach_TM_Clientes(TM_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.TD_Viajero = null;
		}
		
		private void attach_TM_DependienteClientes(TM_DependienteCliente entity)
		{
			this.SendPropertyChanging();
			entity.TD_Viajero = this;
		}
		
		private void detach_TM_DependienteClientes(TM_DependienteCliente entity)
		{
			this.SendPropertyChanging();
			entity.TD_Viajero = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_Asistencia")]
	public partial class TM_Asistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Asistencia_ID;
		
		private System.Nullable<int> _Pais_ID;
		
		private System.Nullable<int> _CategoriaAsistencia_ID;
		
		private string _NombreProfesional;
		
		private string _Direccion;
		
		private System.Nullable<decimal> _Costo;
		
		private EntityRef<TM_CategoriaAsistencia> _TM_CategoriaAsistencia;
		
		private EntityRef<TM_Pai> _TM_Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAsistencia_IDChanging(int value);
    partial void OnAsistencia_IDChanged();
    partial void OnPais_IDChanging(System.Nullable<int> value);
    partial void OnPais_IDChanged();
    partial void OnCategoriaAsistencia_IDChanging(System.Nullable<int> value);
    partial void OnCategoriaAsistencia_IDChanged();
    partial void OnNombreProfesionalChanging(string value);
    partial void OnNombreProfesionalChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnCostoChanging(System.Nullable<decimal> value);
    partial void OnCostoChanged();
    #endregion
		
		public TM_Asistencia()
		{
			this._TM_CategoriaAsistencia = default(EntityRef<TM_CategoriaAsistencia>);
			this._TM_Pai = default(EntityRef<TM_Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Asistencia_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Asistencia_ID
		{
			get
			{
				return this._Asistencia_ID;
			}
			set
			{
				if ((this._Asistencia_ID != value))
				{
					this.OnAsistencia_IDChanging(value);
					this.SendPropertyChanging();
					this._Asistencia_ID = value;
					this.SendPropertyChanged("Asistencia_ID");
					this.OnAsistencia_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_ID", DbType="Int")]
		public System.Nullable<int> Pais_ID
		{
			get
			{
				return this._Pais_ID;
			}
			set
			{
				if ((this._Pais_ID != value))
				{
					if (this._TM_Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPais_IDChanging(value);
					this.SendPropertyChanging();
					this._Pais_ID = value;
					this.SendPropertyChanged("Pais_ID");
					this.OnPais_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaAsistencia_ID", DbType="Int")]
		public System.Nullable<int> CategoriaAsistencia_ID
		{
			get
			{
				return this._CategoriaAsistencia_ID;
			}
			set
			{
				if ((this._CategoriaAsistencia_ID != value))
				{
					if (this._TM_CategoriaAsistencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaAsistencia_IDChanging(value);
					this.SendPropertyChanging();
					this._CategoriaAsistencia_ID = value;
					this.SendPropertyChanged("CategoriaAsistencia_ID");
					this.OnCategoriaAsistencia_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreProfesional", DbType="VarChar(255)")]
		public string NombreProfesional
		{
			get
			{
				return this._NombreProfesional;
			}
			set
			{
				if ((this._NombreProfesional != value))
				{
					this.OnNombreProfesionalChanging(value);
					this.SendPropertyChanging();
					this._NombreProfesional = value;
					this.SendPropertyChanged("NombreProfesional");
					this.OnNombreProfesionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(255)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_CategoriaAsistencia_TM_Asistencia", Storage="_TM_CategoriaAsistencia", ThisKey="CategoriaAsistencia_ID", OtherKey="CategoriaAsistencia_ID", IsForeignKey=true)]
		public TM_CategoriaAsistencia TM_CategoriaAsistencia
		{
			get
			{
				return this._TM_CategoriaAsistencia.Entity;
			}
			set
			{
				TM_CategoriaAsistencia previousValue = this._TM_CategoriaAsistencia.Entity;
				if (((previousValue != value) 
							|| (this._TM_CategoriaAsistencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_CategoriaAsistencia.Entity = null;
						previousValue.TM_Asistencias.Remove(this);
					}
					this._TM_CategoriaAsistencia.Entity = value;
					if ((value != null))
					{
						value.TM_Asistencias.Add(this);
						this._CategoriaAsistencia_ID = value.CategoriaAsistencia_ID;
					}
					else
					{
						this._CategoriaAsistencia_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_CategoriaAsistencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Pai_TM_Asistencia", Storage="_TM_Pai", ThisKey="Pais_ID", OtherKey="Pais_ID", IsForeignKey=true)]
		public TM_Pai TM_Pai
		{
			get
			{
				return this._TM_Pai.Entity;
			}
			set
			{
				TM_Pai previousValue = this._TM_Pai.Entity;
				if (((previousValue != value) 
							|| (this._TM_Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Pai.Entity = null;
						previousValue.TM_Asistencias.Remove(this);
					}
					this._TM_Pai.Entity = value;
					if ((value != null))
					{
						value.TM_Asistencias.Add(this);
						this._Pais_ID = value.Pais_ID;
					}
					else
					{
						this._Pais_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_CategoriaAsistencia")]
	public partial class TM_CategoriaAsistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoriaAsistencia_ID;
		
		private string _Nombre;
		
		private EntitySet<TM_Asistencia> _TM_Asistencias;
		
		private EntitySet<TM_ExtraOpcional> _TM_ExtraOpcionals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoriaAsistencia_IDChanging(int value);
    partial void OnCategoriaAsistencia_IDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TM_CategoriaAsistencia()
		{
			this._TM_Asistencias = new EntitySet<TM_Asistencia>(new Action<TM_Asistencia>(this.attach_TM_Asistencias), new Action<TM_Asistencia>(this.detach_TM_Asistencias));
			this._TM_ExtraOpcionals = new EntitySet<TM_ExtraOpcional>(new Action<TM_ExtraOpcional>(this.attach_TM_ExtraOpcionals), new Action<TM_ExtraOpcional>(this.detach_TM_ExtraOpcionals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaAsistencia_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoriaAsistencia_ID
		{
			get
			{
				return this._CategoriaAsistencia_ID;
			}
			set
			{
				if ((this._CategoriaAsistencia_ID != value))
				{
					this.OnCategoriaAsistencia_IDChanging(value);
					this.SendPropertyChanging();
					this._CategoriaAsistencia_ID = value;
					this.SendPropertyChanged("CategoriaAsistencia_ID");
					this.OnCategoriaAsistencia_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_CategoriaAsistencia_TM_Asistencia", Storage="_TM_Asistencias", ThisKey="CategoriaAsistencia_ID", OtherKey="CategoriaAsistencia_ID")]
		public EntitySet<TM_Asistencia> TM_Asistencias
		{
			get
			{
				return this._TM_Asistencias;
			}
			set
			{
				this._TM_Asistencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_CategoriaAsistencia_TM_ExtraOpcional", Storage="_TM_ExtraOpcionals", ThisKey="CategoriaAsistencia_ID", OtherKey="CategoriaAsistencia_ID")]
		public EntitySet<TM_ExtraOpcional> TM_ExtraOpcionals
		{
			get
			{
				return this._TM_ExtraOpcionals;
			}
			set
			{
				this._TM_ExtraOpcionals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TM_Asistencias(TM_Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.TM_CategoriaAsistencia = this;
		}
		
		private void detach_TM_Asistencias(TM_Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.TM_CategoriaAsistencia = null;
		}
		
		private void attach_TM_ExtraOpcionals(TM_ExtraOpcional entity)
		{
			this.SendPropertyChanging();
			entity.TM_CategoriaAsistencia = this;
		}
		
		private void detach_TM_ExtraOpcionals(TM_ExtraOpcional entity)
		{
			this.SendPropertyChanging();
			entity.TM_CategoriaAsistencia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_Cliente")]
	public partial class TM_Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cliente_ID;
		
		private System.Nullable<int> _DetalleViajero_ID;
		
		private string _NombreCliente;
		
		private string _ApellidoCliente;
		
		private string _NumeroTelefono;
		
		private string _Correo_Electronico;
		
		private EntitySet<TM_Usuario> _TM_Usuarios;
		
		private EntitySet<TM_DependienteCliente> _TM_DependienteClientes;
		
		private EntitySet<TM_GestionPoliza> _TM_GestionPolizas;
		
		private EntityRef<TD_Viajero> _TD_Viajero;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCliente_IDChanging(int value);
    partial void OnCliente_IDChanged();
    partial void OnDetalleViajero_IDChanging(System.Nullable<int> value);
    partial void OnDetalleViajero_IDChanged();
    partial void OnNombreClienteChanging(string value);
    partial void OnNombreClienteChanged();
    partial void OnApellidoClienteChanging(string value);
    partial void OnApellidoClienteChanged();
    partial void OnNumeroTelefonoChanging(string value);
    partial void OnNumeroTelefonoChanged();
    partial void OnCorreo_ElectronicoChanging(string value);
    partial void OnCorreo_ElectronicoChanged();
    #endregion
		
		public TM_Cliente()
		{
			this._TM_Usuarios = new EntitySet<TM_Usuario>(new Action<TM_Usuario>(this.attach_TM_Usuarios), new Action<TM_Usuario>(this.detach_TM_Usuarios));
			this._TM_DependienteClientes = new EntitySet<TM_DependienteCliente>(new Action<TM_DependienteCliente>(this.attach_TM_DependienteClientes), new Action<TM_DependienteCliente>(this.detach_TM_DependienteClientes));
			this._TM_GestionPolizas = new EntitySet<TM_GestionPoliza>(new Action<TM_GestionPoliza>(this.attach_TM_GestionPolizas), new Action<TM_GestionPoliza>(this.detach_TM_GestionPolizas));
			this._TD_Viajero = default(EntityRef<TD_Viajero>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cliente_ID
		{
			get
			{
				return this._Cliente_ID;
			}
			set
			{
				if ((this._Cliente_ID != value))
				{
					this.OnCliente_IDChanging(value);
					this.SendPropertyChanging();
					this._Cliente_ID = value;
					this.SendPropertyChanged("Cliente_ID");
					this.OnCliente_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetalleViajero_ID", DbType="Int")]
		public System.Nullable<int> DetalleViajero_ID
		{
			get
			{
				return this._DetalleViajero_ID;
			}
			set
			{
				if ((this._DetalleViajero_ID != value))
				{
					if (this._TD_Viajero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetalleViajero_IDChanging(value);
					this.SendPropertyChanging();
					this._DetalleViajero_ID = value;
					this.SendPropertyChanged("DetalleViajero_ID");
					this.OnDetalleViajero_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCliente", DbType="VarChar(255)")]
		public string NombreCliente
		{
			get
			{
				return this._NombreCliente;
			}
			set
			{
				if ((this._NombreCliente != value))
				{
					this.OnNombreClienteChanging(value);
					this.SendPropertyChanging();
					this._NombreCliente = value;
					this.SendPropertyChanged("NombreCliente");
					this.OnNombreClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoCliente", DbType="VarChar(255)")]
		public string ApellidoCliente
		{
			get
			{
				return this._ApellidoCliente;
			}
			set
			{
				if ((this._ApellidoCliente != value))
				{
					this.OnApellidoClienteChanging(value);
					this.SendPropertyChanging();
					this._ApellidoCliente = value;
					this.SendPropertyChanged("ApellidoCliente");
					this.OnApellidoClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTelefono", DbType="VarChar(20)")]
		public string NumeroTelefono
		{
			get
			{
				return this._NumeroTelefono;
			}
			set
			{
				if ((this._NumeroTelefono != value))
				{
					this.OnNumeroTelefonoChanging(value);
					this.SendPropertyChanging();
					this._NumeroTelefono = value;
					this.SendPropertyChanged("NumeroTelefono");
					this.OnNumeroTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo_Electronico", DbType="VarChar(255)")]
		public string Correo_Electronico
		{
			get
			{
				return this._Correo_Electronico;
			}
			set
			{
				if ((this._Correo_Electronico != value))
				{
					this.OnCorreo_ElectronicoChanging(value);
					this.SendPropertyChanging();
					this._Correo_Electronico = value;
					this.SendPropertyChanged("Correo_Electronico");
					this.OnCorreo_ElectronicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cliente_TM_Usuario", Storage="_TM_Usuarios", ThisKey="Cliente_ID", OtherKey="Cliente_ID")]
		public EntitySet<TM_Usuario> TM_Usuarios
		{
			get
			{
				return this._TM_Usuarios;
			}
			set
			{
				this._TM_Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cliente_TM_DependienteCliente", Storage="_TM_DependienteClientes", ThisKey="Cliente_ID", OtherKey="Cliente_ID")]
		public EntitySet<TM_DependienteCliente> TM_DependienteClientes
		{
			get
			{
				return this._TM_DependienteClientes;
			}
			set
			{
				this._TM_DependienteClientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cliente_TM_GestionPoliza", Storage="_TM_GestionPolizas", ThisKey="Cliente_ID", OtherKey="Cliente_ID")]
		public EntitySet<TM_GestionPoliza> TM_GestionPolizas
		{
			get
			{
				return this._TM_GestionPolizas;
			}
			set
			{
				this._TM_GestionPolizas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TD_Viajero_TM_Cliente", Storage="_TD_Viajero", ThisKey="DetalleViajero_ID", OtherKey="DetalleViajero_ID", IsForeignKey=true)]
		public TD_Viajero TD_Viajero
		{
			get
			{
				return this._TD_Viajero.Entity;
			}
			set
			{
				TD_Viajero previousValue = this._TD_Viajero.Entity;
				if (((previousValue != value) 
							|| (this._TD_Viajero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TD_Viajero.Entity = null;
						previousValue.TM_Clientes.Remove(this);
					}
					this._TD_Viajero.Entity = value;
					if ((value != null))
					{
						value.TM_Clientes.Add(this);
						this._DetalleViajero_ID = value.DetalleViajero_ID;
					}
					else
					{
						this._DetalleViajero_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TD_Viajero");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TM_Usuarios(TM_Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cliente = this;
		}
		
		private void detach_TM_Usuarios(TM_Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cliente = null;
		}
		
		private void attach_TM_DependienteClientes(TM_DependienteCliente entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cliente = this;
		}
		
		private void detach_TM_DependienteClientes(TM_DependienteCliente entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cliente = null;
		}
		
		private void attach_TM_GestionPolizas(TM_GestionPoliza entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cliente = this;
		}
		
		private void detach_TM_GestionPolizas(TM_GestionPoliza entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_Cobertura")]
	public partial class TM_Cobertura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cobertura_ID;
		
		private string _Descripcion;
		
		private EntitySet<TM_CompraSeguro> _TM_CompraSeguros;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCobertura_IDChanging(int value);
    partial void OnCobertura_IDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TM_Cobertura()
		{
			this._TM_CompraSeguros = new EntitySet<TM_CompraSeguro>(new Action<TM_CompraSeguro>(this.attach_TM_CompraSeguros), new Action<TM_CompraSeguro>(this.detach_TM_CompraSeguros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cobertura_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cobertura_ID
		{
			get
			{
				return this._Cobertura_ID;
			}
			set
			{
				if ((this._Cobertura_ID != value))
				{
					this.OnCobertura_IDChanging(value);
					this.SendPropertyChanging();
					this._Cobertura_ID = value;
					this.SendPropertyChanged("Cobertura_ID");
					this.OnCobertura_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cobertura_TM_CompraSeguro", Storage="_TM_CompraSeguros", ThisKey="Cobertura_ID", OtherKey="Cobertura_ID")]
		public EntitySet<TM_CompraSeguro> TM_CompraSeguros
		{
			get
			{
				return this._TM_CompraSeguros;
			}
			set
			{
				this._TM_CompraSeguros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TM_CompraSeguros(TM_CompraSeguro entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cobertura = this;
		}
		
		private void detach_TM_CompraSeguros(TM_CompraSeguro entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cobertura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_CompraSeguro")]
	public partial class TM_CompraSeguro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Compra_ID;
		
		private System.Nullable<int> _Cotizacion_ID;
		
		private System.Nullable<int> _Cobertura_ID;
		
		private EntitySet<TD_CompraXExtra> _TD_CompraXExtras;
		
		private EntitySet<TM_GestionPoliza> _TM_GestionPolizas;
		
		private EntityRef<TM_Cobertura> _TM_Cobertura;
		
		private EntityRef<TM_Cotizacion> _TM_Cotizacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompra_IDChanging(int value);
    partial void OnCompra_IDChanged();
    partial void OnCotizacion_IDChanging(System.Nullable<int> value);
    partial void OnCotizacion_IDChanged();
    partial void OnCobertura_IDChanging(System.Nullable<int> value);
    partial void OnCobertura_IDChanged();
    #endregion
		
		public TM_CompraSeguro()
		{
			this._TD_CompraXExtras = new EntitySet<TD_CompraXExtra>(new Action<TD_CompraXExtra>(this.attach_TD_CompraXExtras), new Action<TD_CompraXExtra>(this.detach_TD_CompraXExtras));
			this._TM_GestionPolizas = new EntitySet<TM_GestionPoliza>(new Action<TM_GestionPoliza>(this.attach_TM_GestionPolizas), new Action<TM_GestionPoliza>(this.detach_TM_GestionPolizas));
			this._TM_Cobertura = default(EntityRef<TM_Cobertura>);
			this._TM_Cotizacion = default(EntityRef<TM_Cotizacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compra_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Compra_ID
		{
			get
			{
				return this._Compra_ID;
			}
			set
			{
				if ((this._Compra_ID != value))
				{
					this.OnCompra_IDChanging(value);
					this.SendPropertyChanging();
					this._Compra_ID = value;
					this.SendPropertyChanged("Compra_ID");
					this.OnCompra_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cotizacion_ID", DbType="Int")]
		public System.Nullable<int> Cotizacion_ID
		{
			get
			{
				return this._Cotizacion_ID;
			}
			set
			{
				if ((this._Cotizacion_ID != value))
				{
					if (this._TM_Cotizacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCotizacion_IDChanging(value);
					this.SendPropertyChanging();
					this._Cotizacion_ID = value;
					this.SendPropertyChanged("Cotizacion_ID");
					this.OnCotizacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cobertura_ID", DbType="Int")]
		public System.Nullable<int> Cobertura_ID
		{
			get
			{
				return this._Cobertura_ID;
			}
			set
			{
				if ((this._Cobertura_ID != value))
				{
					if (this._TM_Cobertura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCobertura_IDChanging(value);
					this.SendPropertyChanging();
					this._Cobertura_ID = value;
					this.SendPropertyChanged("Cobertura_ID");
					this.OnCobertura_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_CompraSeguro_TD_CompraXExtra", Storage="_TD_CompraXExtras", ThisKey="Compra_ID", OtherKey="Compra_ID")]
		public EntitySet<TD_CompraXExtra> TD_CompraXExtras
		{
			get
			{
				return this._TD_CompraXExtras;
			}
			set
			{
				this._TD_CompraXExtras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_CompraSeguro_TM_GestionPoliza", Storage="_TM_GestionPolizas", ThisKey="Compra_ID", OtherKey="Compra_ID")]
		public EntitySet<TM_GestionPoliza> TM_GestionPolizas
		{
			get
			{
				return this._TM_GestionPolizas;
			}
			set
			{
				this._TM_GestionPolizas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cobertura_TM_CompraSeguro", Storage="_TM_Cobertura", ThisKey="Cobertura_ID", OtherKey="Cobertura_ID", IsForeignKey=true)]
		public TM_Cobertura TM_Cobertura
		{
			get
			{
				return this._TM_Cobertura.Entity;
			}
			set
			{
				TM_Cobertura previousValue = this._TM_Cobertura.Entity;
				if (((previousValue != value) 
							|| (this._TM_Cobertura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Cobertura.Entity = null;
						previousValue.TM_CompraSeguros.Remove(this);
					}
					this._TM_Cobertura.Entity = value;
					if ((value != null))
					{
						value.TM_CompraSeguros.Add(this);
						this._Cobertura_ID = value.Cobertura_ID;
					}
					else
					{
						this._Cobertura_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Cobertura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cotizacion_TM_CompraSeguro", Storage="_TM_Cotizacion", ThisKey="Cotizacion_ID", OtherKey="Cotizacion_ID", IsForeignKey=true)]
		public TM_Cotizacion TM_Cotizacion
		{
			get
			{
				return this._TM_Cotizacion.Entity;
			}
			set
			{
				TM_Cotizacion previousValue = this._TM_Cotizacion.Entity;
				if (((previousValue != value) 
							|| (this._TM_Cotizacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Cotizacion.Entity = null;
						previousValue.TM_CompraSeguros.Remove(this);
					}
					this._TM_Cotizacion.Entity = value;
					if ((value != null))
					{
						value.TM_CompraSeguros.Add(this);
						this._Cotizacion_ID = value.Cotizacion_ID;
					}
					else
					{
						this._Cotizacion_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Cotizacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TD_CompraXExtras(TD_CompraXExtra entity)
		{
			this.SendPropertyChanging();
			entity.TM_CompraSeguro = this;
		}
		
		private void detach_TD_CompraXExtras(TD_CompraXExtra entity)
		{
			this.SendPropertyChanging();
			entity.TM_CompraSeguro = null;
		}
		
		private void attach_TM_GestionPolizas(TM_GestionPoliza entity)
		{
			this.SendPropertyChanging();
			entity.TM_CompraSeguro = this;
		}
		
		private void detach_TM_GestionPolizas(TM_GestionPoliza entity)
		{
			this.SendPropertyChanging();
			entity.TM_CompraSeguro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_Cotizacion")]
	public partial class TM_Cotizacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cotizacion_ID;
		
		private System.Nullable<int> _Pais_ID;
		
		private System.Nullable<int> _Duracion;
		
		private System.Nullable<int> _Cantidad_Viajeros;
		
		private EntitySet<TD_Viajero> _TD_Viajeros;
		
		private EntitySet<TM_CompraSeguro> _TM_CompraSeguros;
		
		private EntityRef<TM_Pai> _TM_Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCotizacion_IDChanging(int value);
    partial void OnCotizacion_IDChanged();
    partial void OnPais_IDChanging(System.Nullable<int> value);
    partial void OnPais_IDChanged();
    partial void OnDuracionChanging(System.Nullable<int> value);
    partial void OnDuracionChanged();
    partial void OnCantidad_ViajerosChanging(System.Nullable<int> value);
    partial void OnCantidad_ViajerosChanged();
    #endregion
		
		public TM_Cotizacion()
		{
			this._TD_Viajeros = new EntitySet<TD_Viajero>(new Action<TD_Viajero>(this.attach_TD_Viajeros), new Action<TD_Viajero>(this.detach_TD_Viajeros));
			this._TM_CompraSeguros = new EntitySet<TM_CompraSeguro>(new Action<TM_CompraSeguro>(this.attach_TM_CompraSeguros), new Action<TM_CompraSeguro>(this.detach_TM_CompraSeguros));
			this._TM_Pai = default(EntityRef<TM_Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cotizacion_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cotizacion_ID
		{
			get
			{
				return this._Cotizacion_ID;
			}
			set
			{
				if ((this._Cotizacion_ID != value))
				{
					this.OnCotizacion_IDChanging(value);
					this.SendPropertyChanging();
					this._Cotizacion_ID = value;
					this.SendPropertyChanged("Cotizacion_ID");
					this.OnCotizacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_ID", DbType="Int")]
		public System.Nullable<int> Pais_ID
		{
			get
			{
				return this._Pais_ID;
			}
			set
			{
				if ((this._Pais_ID != value))
				{
					if (this._TM_Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPais_IDChanging(value);
					this.SendPropertyChanging();
					this._Pais_ID = value;
					this.SendPropertyChanged("Pais_ID");
					this.OnPais_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duracion", DbType="Int")]
		public System.Nullable<int> Duracion
		{
			get
			{
				return this._Duracion;
			}
			set
			{
				if ((this._Duracion != value))
				{
					this.OnDuracionChanging(value);
					this.SendPropertyChanging();
					this._Duracion = value;
					this.SendPropertyChanged("Duracion");
					this.OnDuracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad_Viajeros", DbType="Int")]
		public System.Nullable<int> Cantidad_Viajeros
		{
			get
			{
				return this._Cantidad_Viajeros;
			}
			set
			{
				if ((this._Cantidad_Viajeros != value))
				{
					this.OnCantidad_ViajerosChanging(value);
					this.SendPropertyChanging();
					this._Cantidad_Viajeros = value;
					this.SendPropertyChanged("Cantidad_Viajeros");
					this.OnCantidad_ViajerosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cotizacion_TD_Viajero", Storage="_TD_Viajeros", ThisKey="Cotizacion_ID", OtherKey="Cotizacion_ID")]
		public EntitySet<TD_Viajero> TD_Viajeros
		{
			get
			{
				return this._TD_Viajeros;
			}
			set
			{
				this._TD_Viajeros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cotizacion_TM_CompraSeguro", Storage="_TM_CompraSeguros", ThisKey="Cotizacion_ID", OtherKey="Cotizacion_ID")]
		public EntitySet<TM_CompraSeguro> TM_CompraSeguros
		{
			get
			{
				return this._TM_CompraSeguros;
			}
			set
			{
				this._TM_CompraSeguros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Pai_TM_Cotizacion", Storage="_TM_Pai", ThisKey="Pais_ID", OtherKey="Pais_ID", IsForeignKey=true)]
		public TM_Pai TM_Pai
		{
			get
			{
				return this._TM_Pai.Entity;
			}
			set
			{
				TM_Pai previousValue = this._TM_Pai.Entity;
				if (((previousValue != value) 
							|| (this._TM_Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Pai.Entity = null;
						previousValue.TM_Cotizacions.Remove(this);
					}
					this._TM_Pai.Entity = value;
					if ((value != null))
					{
						value.TM_Cotizacions.Add(this);
						this._Pais_ID = value.Pais_ID;
					}
					else
					{
						this._Pais_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TD_Viajeros(TD_Viajero entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cotizacion = this;
		}
		
		private void detach_TD_Viajeros(TD_Viajero entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cotizacion = null;
		}
		
		private void attach_TM_CompraSeguros(TM_CompraSeguro entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cotizacion = this;
		}
		
		private void detach_TM_CompraSeguros(TM_CompraSeguro entity)
		{
			this.SendPropertyChanging();
			entity.TM_Cotizacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_DependienteCliente")]
	public partial class TM_DependienteCliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DependienteCliente_ID;
		
		private System.Nullable<int> _Cliente_ID;
		
		private System.Nullable<int> _DetalleViajero_ID;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private EntityRef<TM_Cliente> _TM_Cliente;
		
		private EntityRef<TD_Viajero> _TD_Viajero;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDependienteCliente_IDChanging(int value);
    partial void OnDependienteCliente_IDChanged();
    partial void OnCliente_IDChanging(System.Nullable<int> value);
    partial void OnCliente_IDChanged();
    partial void OnDetalleViajero_IDChanging(System.Nullable<int> value);
    partial void OnDetalleViajero_IDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    #endregion
		
		public TM_DependienteCliente()
		{
			this._TM_Cliente = default(EntityRef<TM_Cliente>);
			this._TD_Viajero = default(EntityRef<TD_Viajero>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DependienteCliente_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DependienteCliente_ID
		{
			get
			{
				return this._DependienteCliente_ID;
			}
			set
			{
				if ((this._DependienteCliente_ID != value))
				{
					this.OnDependienteCliente_IDChanging(value);
					this.SendPropertyChanging();
					this._DependienteCliente_ID = value;
					this.SendPropertyChanged("DependienteCliente_ID");
					this.OnDependienteCliente_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente_ID", DbType="Int")]
		public System.Nullable<int> Cliente_ID
		{
			get
			{
				return this._Cliente_ID;
			}
			set
			{
				if ((this._Cliente_ID != value))
				{
					if (this._TM_Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCliente_IDChanging(value);
					this.SendPropertyChanging();
					this._Cliente_ID = value;
					this.SendPropertyChanged("Cliente_ID");
					this.OnCliente_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetalleViajero_ID", DbType="Int")]
		public System.Nullable<int> DetalleViajero_ID
		{
			get
			{
				return this._DetalleViajero_ID;
			}
			set
			{
				if ((this._DetalleViajero_ID != value))
				{
					if (this._TD_Viajero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetalleViajero_IDChanging(value);
					this.SendPropertyChanging();
					this._DetalleViajero_ID = value;
					this.SendPropertyChanged("DetalleViajero_ID");
					this.OnDetalleViajero_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(255)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cliente_TM_DependienteCliente", Storage="_TM_Cliente", ThisKey="Cliente_ID", OtherKey="Cliente_ID", IsForeignKey=true)]
		public TM_Cliente TM_Cliente
		{
			get
			{
				return this._TM_Cliente.Entity;
			}
			set
			{
				TM_Cliente previousValue = this._TM_Cliente.Entity;
				if (((previousValue != value) 
							|| (this._TM_Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Cliente.Entity = null;
						previousValue.TM_DependienteClientes.Remove(this);
					}
					this._TM_Cliente.Entity = value;
					if ((value != null))
					{
						value.TM_DependienteClientes.Add(this);
						this._Cliente_ID = value.Cliente_ID;
					}
					else
					{
						this._Cliente_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TD_Viajero_TM_DependienteCliente", Storage="_TD_Viajero", ThisKey="DetalleViajero_ID", OtherKey="DetalleViajero_ID", IsForeignKey=true)]
		public TD_Viajero TD_Viajero
		{
			get
			{
				return this._TD_Viajero.Entity;
			}
			set
			{
				TD_Viajero previousValue = this._TD_Viajero.Entity;
				if (((previousValue != value) 
							|| (this._TD_Viajero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TD_Viajero.Entity = null;
						previousValue.TM_DependienteClientes.Remove(this);
					}
					this._TD_Viajero.Entity = value;
					if ((value != null))
					{
						value.TM_DependienteClientes.Add(this);
						this._DetalleViajero_ID = value.DetalleViajero_ID;
					}
					else
					{
						this._DetalleViajero_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TD_Viajero");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_DocumentosReclamacion")]
	public partial class TM_DocumentosReclamacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentosReclamacion_ID;
		
		private System.Nullable<int> _Reclamacion_ID;
		
		private string _Nombre;
		
		private string _Archivo;
		
		private EntityRef<TM_Reclamacion> _TM_Reclamacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentosReclamacion_IDChanging(int value);
    partial void OnDocumentosReclamacion_IDChanged();
    partial void OnReclamacion_IDChanging(System.Nullable<int> value);
    partial void OnReclamacion_IDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnArchivoChanging(string value);
    partial void OnArchivoChanged();
    #endregion
		
		public TM_DocumentosReclamacion()
		{
			this._TM_Reclamacion = default(EntityRef<TM_Reclamacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentosReclamacion_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentosReclamacion_ID
		{
			get
			{
				return this._DocumentosReclamacion_ID;
			}
			set
			{
				if ((this._DocumentosReclamacion_ID != value))
				{
					this.OnDocumentosReclamacion_IDChanging(value);
					this.SendPropertyChanging();
					this._DocumentosReclamacion_ID = value;
					this.SendPropertyChanged("DocumentosReclamacion_ID");
					this.OnDocumentosReclamacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reclamacion_ID", DbType="Int")]
		public System.Nullable<int> Reclamacion_ID
		{
			get
			{
				return this._Reclamacion_ID;
			}
			set
			{
				if ((this._Reclamacion_ID != value))
				{
					if (this._TM_Reclamacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReclamacion_IDChanging(value);
					this.SendPropertyChanging();
					this._Reclamacion_ID = value;
					this.SendPropertyChanged("Reclamacion_ID");
					this.OnReclamacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archivo", DbType="VarChar(255)")]
		public string Archivo
		{
			get
			{
				return this._Archivo;
			}
			set
			{
				if ((this._Archivo != value))
				{
					this.OnArchivoChanging(value);
					this.SendPropertyChanging();
					this._Archivo = value;
					this.SendPropertyChanged("Archivo");
					this.OnArchivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Reclamacion_TM_DocumentosReclamacion", Storage="_TM_Reclamacion", ThisKey="Reclamacion_ID", OtherKey="Reclamacion_ID", IsForeignKey=true)]
		public TM_Reclamacion TM_Reclamacion
		{
			get
			{
				return this._TM_Reclamacion.Entity;
			}
			set
			{
				TM_Reclamacion previousValue = this._TM_Reclamacion.Entity;
				if (((previousValue != value) 
							|| (this._TM_Reclamacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Reclamacion.Entity = null;
						previousValue.TM_DocumentosReclamacions.Remove(this);
					}
					this._TM_Reclamacion.Entity = value;
					if ((value != null))
					{
						value.TM_DocumentosReclamacions.Add(this);
						this._Reclamacion_ID = value.Reclamacion_ID;
					}
					else
					{
						this._Reclamacion_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Reclamacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_ExtraOpcional")]
	public partial class TM_ExtraOpcional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExtraOpcional_ID;
		
		private System.Nullable<int> _CategoriaAsistencia_ID;
		
		private string _Descripcion;
		
		private EntitySet<TD_CompraXExtra> _TD_CompraXExtras;
		
		private EntityRef<TM_CategoriaAsistencia> _TM_CategoriaAsistencia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtraOpcional_IDChanging(int value);
    partial void OnExtraOpcional_IDChanged();
    partial void OnCategoriaAsistencia_IDChanging(System.Nullable<int> value);
    partial void OnCategoriaAsistencia_IDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TM_ExtraOpcional()
		{
			this._TD_CompraXExtras = new EntitySet<TD_CompraXExtra>(new Action<TD_CompraXExtra>(this.attach_TD_CompraXExtras), new Action<TD_CompraXExtra>(this.detach_TD_CompraXExtras));
			this._TM_CategoriaAsistencia = default(EntityRef<TM_CategoriaAsistencia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraOpcional_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExtraOpcional_ID
		{
			get
			{
				return this._ExtraOpcional_ID;
			}
			set
			{
				if ((this._ExtraOpcional_ID != value))
				{
					this.OnExtraOpcional_IDChanging(value);
					this.SendPropertyChanging();
					this._ExtraOpcional_ID = value;
					this.SendPropertyChanged("ExtraOpcional_ID");
					this.OnExtraOpcional_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaAsistencia_ID", DbType="Int")]
		public System.Nullable<int> CategoriaAsistencia_ID
		{
			get
			{
				return this._CategoriaAsistencia_ID;
			}
			set
			{
				if ((this._CategoriaAsistencia_ID != value))
				{
					if (this._TM_CategoriaAsistencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaAsistencia_IDChanging(value);
					this.SendPropertyChanging();
					this._CategoriaAsistencia_ID = value;
					this.SendPropertyChanged("CategoriaAsistencia_ID");
					this.OnCategoriaAsistencia_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_ExtraOpcional_TD_CompraXExtra", Storage="_TD_CompraXExtras", ThisKey="ExtraOpcional_ID", OtherKey="ExtraOpcional_ID")]
		public EntitySet<TD_CompraXExtra> TD_CompraXExtras
		{
			get
			{
				return this._TD_CompraXExtras;
			}
			set
			{
				this._TD_CompraXExtras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_CategoriaAsistencia_TM_ExtraOpcional", Storage="_TM_CategoriaAsistencia", ThisKey="CategoriaAsistencia_ID", OtherKey="CategoriaAsistencia_ID", IsForeignKey=true)]
		public TM_CategoriaAsistencia TM_CategoriaAsistencia
		{
			get
			{
				return this._TM_CategoriaAsistencia.Entity;
			}
			set
			{
				TM_CategoriaAsistencia previousValue = this._TM_CategoriaAsistencia.Entity;
				if (((previousValue != value) 
							|| (this._TM_CategoriaAsistencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_CategoriaAsistencia.Entity = null;
						previousValue.TM_ExtraOpcionals.Remove(this);
					}
					this._TM_CategoriaAsistencia.Entity = value;
					if ((value != null))
					{
						value.TM_ExtraOpcionals.Add(this);
						this._CategoriaAsistencia_ID = value.CategoriaAsistencia_ID;
					}
					else
					{
						this._CategoriaAsistencia_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_CategoriaAsistencia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TD_CompraXExtras(TD_CompraXExtra entity)
		{
			this.SendPropertyChanging();
			entity.TM_ExtraOpcional = this;
		}
		
		private void detach_TD_CompraXExtras(TD_CompraXExtra entity)
		{
			this.SendPropertyChanging();
			entity.TM_ExtraOpcional = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_GestionPoliza")]
	public partial class TM_GestionPoliza : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Poliza_ID;
		
		private System.Nullable<int> _Cliente_ID;
		
		private System.Nullable<int> _Compra_ID;
		
		private System.Nullable<System.DateTime> _Renovacion;
		
		private string _DocumentoPoliza;
		
		private System.Nullable<bool> _Estatus;
		
		private EntitySet<TM_Reclamacion> _TM_Reclamacions;
		
		private EntityRef<TM_Cliente> _TM_Cliente;
		
		private EntityRef<TM_CompraSeguro> _TM_CompraSeguro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPoliza_IDChanging(int value);
    partial void OnPoliza_IDChanged();
    partial void OnCliente_IDChanging(System.Nullable<int> value);
    partial void OnCliente_IDChanged();
    partial void OnCompra_IDChanging(System.Nullable<int> value);
    partial void OnCompra_IDChanged();
    partial void OnRenovacionChanging(System.Nullable<System.DateTime> value);
    partial void OnRenovacionChanged();
    partial void OnDocumentoPolizaChanging(string value);
    partial void OnDocumentoPolizaChanged();
    partial void OnEstatusChanging(System.Nullable<bool> value);
    partial void OnEstatusChanged();
    #endregion
		
		public TM_GestionPoliza()
		{
			this._TM_Reclamacions = new EntitySet<TM_Reclamacion>(new Action<TM_Reclamacion>(this.attach_TM_Reclamacions), new Action<TM_Reclamacion>(this.detach_TM_Reclamacions));
			this._TM_Cliente = default(EntityRef<TM_Cliente>);
			this._TM_CompraSeguro = default(EntityRef<TM_CompraSeguro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poliza_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Poliza_ID
		{
			get
			{
				return this._Poliza_ID;
			}
			set
			{
				if ((this._Poliza_ID != value))
				{
					this.OnPoliza_IDChanging(value);
					this.SendPropertyChanging();
					this._Poliza_ID = value;
					this.SendPropertyChanged("Poliza_ID");
					this.OnPoliza_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente_ID", DbType="Int")]
		public System.Nullable<int> Cliente_ID
		{
			get
			{
				return this._Cliente_ID;
			}
			set
			{
				if ((this._Cliente_ID != value))
				{
					if (this._TM_Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCliente_IDChanging(value);
					this.SendPropertyChanging();
					this._Cliente_ID = value;
					this.SendPropertyChanged("Cliente_ID");
					this.OnCliente_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compra_ID", DbType="Int")]
		public System.Nullable<int> Compra_ID
		{
			get
			{
				return this._Compra_ID;
			}
			set
			{
				if ((this._Compra_ID != value))
				{
					if (this._TM_CompraSeguro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompra_IDChanging(value);
					this.SendPropertyChanging();
					this._Compra_ID = value;
					this.SendPropertyChanged("Compra_ID");
					this.OnCompra_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Renovacion", DbType="Date")]
		public System.Nullable<System.DateTime> Renovacion
		{
			get
			{
				return this._Renovacion;
			}
			set
			{
				if ((this._Renovacion != value))
				{
					this.OnRenovacionChanging(value);
					this.SendPropertyChanging();
					this._Renovacion = value;
					this.SendPropertyChanged("Renovacion");
					this.OnRenovacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentoPoliza", DbType="VarChar(255)")]
		public string DocumentoPoliza
		{
			get
			{
				return this._DocumentoPoliza;
			}
			set
			{
				if ((this._DocumentoPoliza != value))
				{
					this.OnDocumentoPolizaChanging(value);
					this.SendPropertyChanging();
					this._DocumentoPoliza = value;
					this.SendPropertyChanged("DocumentoPoliza");
					this.OnDocumentoPolizaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estatus", DbType="Bit")]
		public System.Nullable<bool> Estatus
		{
			get
			{
				return this._Estatus;
			}
			set
			{
				if ((this._Estatus != value))
				{
					this.OnEstatusChanging(value);
					this.SendPropertyChanging();
					this._Estatus = value;
					this.SendPropertyChanged("Estatus");
					this.OnEstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_GestionPoliza_TM_Reclamacion", Storage="_TM_Reclamacions", ThisKey="Poliza_ID", OtherKey="Poliza_ID")]
		public EntitySet<TM_Reclamacion> TM_Reclamacions
		{
			get
			{
				return this._TM_Reclamacions;
			}
			set
			{
				this._TM_Reclamacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Cliente_TM_GestionPoliza", Storage="_TM_Cliente", ThisKey="Cliente_ID", OtherKey="Cliente_ID", IsForeignKey=true)]
		public TM_Cliente TM_Cliente
		{
			get
			{
				return this._TM_Cliente.Entity;
			}
			set
			{
				TM_Cliente previousValue = this._TM_Cliente.Entity;
				if (((previousValue != value) 
							|| (this._TM_Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Cliente.Entity = null;
						previousValue.TM_GestionPolizas.Remove(this);
					}
					this._TM_Cliente.Entity = value;
					if ((value != null))
					{
						value.TM_GestionPolizas.Add(this);
						this._Cliente_ID = value.Cliente_ID;
					}
					else
					{
						this._Cliente_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_CompraSeguro_TM_GestionPoliza", Storage="_TM_CompraSeguro", ThisKey="Compra_ID", OtherKey="Compra_ID", IsForeignKey=true)]
		public TM_CompraSeguro TM_CompraSeguro
		{
			get
			{
				return this._TM_CompraSeguro.Entity;
			}
			set
			{
				TM_CompraSeguro previousValue = this._TM_CompraSeguro.Entity;
				if (((previousValue != value) 
							|| (this._TM_CompraSeguro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_CompraSeguro.Entity = null;
						previousValue.TM_GestionPolizas.Remove(this);
					}
					this._TM_CompraSeguro.Entity = value;
					if ((value != null))
					{
						value.TM_GestionPolizas.Add(this);
						this._Compra_ID = value.Compra_ID;
					}
					else
					{
						this._Compra_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_CompraSeguro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TM_Reclamacions(TM_Reclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_GestionPoliza = this;
		}
		
		private void detach_TM_Reclamacions(TM_Reclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_GestionPoliza = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_Pais")]
	public partial class TM_Pai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pais_ID;
		
		private string _Nombre;
		
		private EntitySet<TM_Asistencia> _TM_Asistencias;
		
		private EntitySet<TM_Cotizacion> _TM_Cotizacions;
		
		private EntitySet<TM_Recomendacione> _TM_Recomendaciones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPais_IDChanging(int value);
    partial void OnPais_IDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TM_Pai()
		{
			this._TM_Asistencias = new EntitySet<TM_Asistencia>(new Action<TM_Asistencia>(this.attach_TM_Asistencias), new Action<TM_Asistencia>(this.detach_TM_Asistencias));
			this._TM_Cotizacions = new EntitySet<TM_Cotizacion>(new Action<TM_Cotizacion>(this.attach_TM_Cotizacions), new Action<TM_Cotizacion>(this.detach_TM_Cotizacions));
			this._TM_Recomendaciones = new EntitySet<TM_Recomendacione>(new Action<TM_Recomendacione>(this.attach_TM_Recomendaciones), new Action<TM_Recomendacione>(this.detach_TM_Recomendaciones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pais_ID
		{
			get
			{
				return this._Pais_ID;
			}
			set
			{
				if ((this._Pais_ID != value))
				{
					this.OnPais_IDChanging(value);
					this.SendPropertyChanging();
					this._Pais_ID = value;
					this.SendPropertyChanged("Pais_ID");
					this.OnPais_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Pai_TM_Asistencia", Storage="_TM_Asistencias", ThisKey="Pais_ID", OtherKey="Pais_ID")]
		public EntitySet<TM_Asistencia> TM_Asistencias
		{
			get
			{
				return this._TM_Asistencias;
			}
			set
			{
				this._TM_Asistencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Pai_TM_Cotizacion", Storage="_TM_Cotizacions", ThisKey="Pais_ID", OtherKey="Pais_ID")]
		public EntitySet<TM_Cotizacion> TM_Cotizacions
		{
			get
			{
				return this._TM_Cotizacions;
			}
			set
			{
				this._TM_Cotizacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Pai_TM_Recomendacione", Storage="_TM_Recomendaciones", ThisKey="Pais_ID", OtherKey="Pais_ID")]
		public EntitySet<TM_Recomendacione> TM_Recomendaciones
		{
			get
			{
				return this._TM_Recomendaciones;
			}
			set
			{
				this._TM_Recomendaciones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TM_Asistencias(TM_Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.TM_Pai = this;
		}
		
		private void detach_TM_Asistencias(TM_Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.TM_Pai = null;
		}
		
		private void attach_TM_Cotizacions(TM_Cotizacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_Pai = this;
		}
		
		private void detach_TM_Cotizacions(TM_Cotizacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_Pai = null;
		}
		
		private void attach_TM_Recomendaciones(TM_Recomendacione entity)
		{
			this.SendPropertyChanging();
			entity.TM_Pai = this;
		}
		
		private void detach_TM_Recomendaciones(TM_Recomendacione entity)
		{
			this.SendPropertyChanging();
			entity.TM_Pai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_Reclamacion")]
	public partial class TM_Reclamacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Reclamacion_ID;
		
		private System.Nullable<int> _Poliza_ID;
		
		private System.Nullable<int> _EstadoReclamacion_ID;
		
		private EntitySet<TD_ComunicacionReclamacion> _TD_ComunicacionReclamacions;
		
		private EntitySet<TM_DocumentosReclamacion> _TM_DocumentosReclamacions;
		
		private EntityRef<TD_EstadoReclamacion> _TD_EstadoReclamacion;
		
		private EntityRef<TM_GestionPoliza> _TM_GestionPoliza;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReclamacion_IDChanging(int value);
    partial void OnReclamacion_IDChanged();
    partial void OnPoliza_IDChanging(System.Nullable<int> value);
    partial void OnPoliza_IDChanged();
    partial void OnEstadoReclamacion_IDChanging(System.Nullable<int> value);
    partial void OnEstadoReclamacion_IDChanged();
    #endregion
		
		public TM_Reclamacion()
		{
			this._TD_ComunicacionReclamacions = new EntitySet<TD_ComunicacionReclamacion>(new Action<TD_ComunicacionReclamacion>(this.attach_TD_ComunicacionReclamacions), new Action<TD_ComunicacionReclamacion>(this.detach_TD_ComunicacionReclamacions));
			this._TM_DocumentosReclamacions = new EntitySet<TM_DocumentosReclamacion>(new Action<TM_DocumentosReclamacion>(this.attach_TM_DocumentosReclamacions), new Action<TM_DocumentosReclamacion>(this.detach_TM_DocumentosReclamacions));
			this._TD_EstadoReclamacion = default(EntityRef<TD_EstadoReclamacion>);
			this._TM_GestionPoliza = default(EntityRef<TM_GestionPoliza>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reclamacion_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Reclamacion_ID
		{
			get
			{
				return this._Reclamacion_ID;
			}
			set
			{
				if ((this._Reclamacion_ID != value))
				{
					this.OnReclamacion_IDChanging(value);
					this.SendPropertyChanging();
					this._Reclamacion_ID = value;
					this.SendPropertyChanged("Reclamacion_ID");
					this.OnReclamacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poliza_ID", DbType="Int")]
		public System.Nullable<int> Poliza_ID
		{
			get
			{
				return this._Poliza_ID;
			}
			set
			{
				if ((this._Poliza_ID != value))
				{
					if (this._TM_GestionPoliza.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPoliza_IDChanging(value);
					this.SendPropertyChanging();
					this._Poliza_ID = value;
					this.SendPropertyChanged("Poliza_ID");
					this.OnPoliza_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoReclamacion_ID", DbType="Int")]
		public System.Nullable<int> EstadoReclamacion_ID
		{
			get
			{
				return this._EstadoReclamacion_ID;
			}
			set
			{
				if ((this._EstadoReclamacion_ID != value))
				{
					if (this._TD_EstadoReclamacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoReclamacion_IDChanging(value);
					this.SendPropertyChanging();
					this._EstadoReclamacion_ID = value;
					this.SendPropertyChanged("EstadoReclamacion_ID");
					this.OnEstadoReclamacion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Reclamacion_TD_ComunicacionReclamacion", Storage="_TD_ComunicacionReclamacions", ThisKey="Reclamacion_ID", OtherKey="Reclamacion_ID")]
		public EntitySet<TD_ComunicacionReclamacion> TD_ComunicacionReclamacions
		{
			get
			{
				return this._TD_ComunicacionReclamacions;
			}
			set
			{
				this._TD_ComunicacionReclamacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Reclamacion_TM_DocumentosReclamacion", Storage="_TM_DocumentosReclamacions", ThisKey="Reclamacion_ID", OtherKey="Reclamacion_ID")]
		public EntitySet<TM_DocumentosReclamacion> TM_DocumentosReclamacions
		{
			get
			{
				return this._TM_DocumentosReclamacions;
			}
			set
			{
				this._TM_DocumentosReclamacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TD_EstadoReclamacion_TM_Reclamacion", Storage="_TD_EstadoReclamacion", ThisKey="EstadoReclamacion_ID", OtherKey="EstadoReclamacion_ID", IsForeignKey=true)]
		public TD_EstadoReclamacion TD_EstadoReclamacion
		{
			get
			{
				return this._TD_EstadoReclamacion.Entity;
			}
			set
			{
				TD_EstadoReclamacion previousValue = this._TD_EstadoReclamacion.Entity;
				if (((previousValue != value) 
							|| (this._TD_EstadoReclamacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TD_EstadoReclamacion.Entity = null;
						previousValue.TM_Reclamacions.Remove(this);
					}
					this._TD_EstadoReclamacion.Entity = value;
					if ((value != null))
					{
						value.TM_Reclamacions.Add(this);
						this._EstadoReclamacion_ID = value.EstadoReclamacion_ID;
					}
					else
					{
						this._EstadoReclamacion_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TD_EstadoReclamacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_GestionPoliza_TM_Reclamacion", Storage="_TM_GestionPoliza", ThisKey="Poliza_ID", OtherKey="Poliza_ID", IsForeignKey=true)]
		public TM_GestionPoliza TM_GestionPoliza
		{
			get
			{
				return this._TM_GestionPoliza.Entity;
			}
			set
			{
				TM_GestionPoliza previousValue = this._TM_GestionPoliza.Entity;
				if (((previousValue != value) 
							|| (this._TM_GestionPoliza.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_GestionPoliza.Entity = null;
						previousValue.TM_Reclamacions.Remove(this);
					}
					this._TM_GestionPoliza.Entity = value;
					if ((value != null))
					{
						value.TM_Reclamacions.Add(this);
						this._Poliza_ID = value.Poliza_ID;
					}
					else
					{
						this._Poliza_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_GestionPoliza");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TD_ComunicacionReclamacions(TD_ComunicacionReclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_Reclamacion = this;
		}
		
		private void detach_TD_ComunicacionReclamacions(TD_ComunicacionReclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_Reclamacion = null;
		}
		
		private void attach_TM_DocumentosReclamacions(TM_DocumentosReclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_Reclamacion = this;
		}
		
		private void detach_TM_DocumentosReclamacions(TM_DocumentosReclamacion entity)
		{
			this.SendPropertyChanging();
			entity.TM_Reclamacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TM_Recomendaciones")]
	public partial class TM_Recomendacione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Recomendaciones_ID;
		
		private System.Nullable<int> _Pais_ID;
		
		private string _DetalleRecomendacion;
		
		private EntityRef<TM_Pai> _TM_Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecomendaciones_IDChanging(int value);
    partial void OnRecomendaciones_IDChanged();
    partial void OnPais_IDChanging(System.Nullable<int> value);
    partial void OnPais_IDChanged();
    partial void OnDetalleRecomendacionChanging(string value);
    partial void OnDetalleRecomendacionChanged();
    #endregion
		
		public TM_Recomendacione()
		{
			this._TM_Pai = default(EntityRef<TM_Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recomendaciones_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Recomendaciones_ID
		{
			get
			{
				return this._Recomendaciones_ID;
			}
			set
			{
				if ((this._Recomendaciones_ID != value))
				{
					this.OnRecomendaciones_IDChanging(value);
					this.SendPropertyChanging();
					this._Recomendaciones_ID = value;
					this.SendPropertyChanged("Recomendaciones_ID");
					this.OnRecomendaciones_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_ID", DbType="Int")]
		public System.Nullable<int> Pais_ID
		{
			get
			{
				return this._Pais_ID;
			}
			set
			{
				if ((this._Pais_ID != value))
				{
					if (this._TM_Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPais_IDChanging(value);
					this.SendPropertyChanging();
					this._Pais_ID = value;
					this.SendPropertyChanged("Pais_ID");
					this.OnPais_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetalleRecomendacion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DetalleRecomendacion
		{
			get
			{
				return this._DetalleRecomendacion;
			}
			set
			{
				if ((this._DetalleRecomendacion != value))
				{
					this.OnDetalleRecomendacionChanging(value);
					this.SendPropertyChanging();
					this._DetalleRecomendacion = value;
					this.SendPropertyChanged("DetalleRecomendacion");
					this.OnDetalleRecomendacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TM_Pai_TM_Recomendacione", Storage="_TM_Pai", ThisKey="Pais_ID", OtherKey="Pais_ID", IsForeignKey=true)]
		public TM_Pai TM_Pai
		{
			get
			{
				return this._TM_Pai.Entity;
			}
			set
			{
				TM_Pai previousValue = this._TM_Pai.Entity;
				if (((previousValue != value) 
							|| (this._TM_Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TM_Pai.Entity = null;
						previousValue.TM_Recomendaciones.Remove(this);
					}
					this._TM_Pai.Entity = value;
					if ((value != null))
					{
						value.TM_Recomendaciones.Add(this);
						this._Pais_ID = value.Pais_ID;
					}
					else
					{
						this._Pais_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TM_Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
